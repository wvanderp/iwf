{
  "env": {
    "browser": false,
    "es6": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "globals": {
    "BigInt": true
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "moduleDirectory": [
          "node_modules",
          "src/"
        ]
      }
    },
    "jsdoc": {
      "ignorePrivate": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "ramda",
    "sonarjs",
    "unicorn",
    "jsdoc",
    "woke",
    "no-secrets",
    "pii"
  ],
  "extends": [
    "airbnb-base",
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended",
    "plugin:compat/recommended",
    "plugin:ramda/recommended",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsdoc/recommended",
    "plugin:jsonc/base",
    "plugin:pii/recommended"
  ],
  "overrides": [
    {
      "files": [
        "*spec.ts",
        "*spec.xts"
      ],
      "rules": {
        // Mocha doesnâ€™t like it when we use arrows
        // https://mochajs.org/#arrow-functions
        "prefer-arrow-callback": "off",
        "func-names": "off",
        // There are no function calls in mocha so this rule thinks the file does nothing. But mocha calls the file
        "@typescript-eslint/no-unused-expressions": "off",
        // Any is used to mock some vars and it gives warnings about it that are unwanted
        "@typescript-eslint/no-explicit-any": "off",
        "compat/compat": "off",
        "@typescript-eslint/naming-convention": "off",
        "sonarjs/no-duplicate-string": "off",
        // disabling this rule because we have dynamically generated tests
        "mocha/no-setup-in-describe": "off"
      }
    }
  ],
  "rules": {
    // Git fixes this issue by automatically change the brake line type when pushing the local branches
    "linebreak-style": "off",
    "no-await-in-loop": "off",
    "no-console": "warn",
    "no-restricted-syntax": [
      "error",
      "LabeledStatement",
      "WithStatement"
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreComments": true,
        "ignoreTrailingComments": true,
        "ignoreStrings": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "no-underscore-dangle": "off",
    // sometimes it is necessary
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/indent": [
      "error",
      4,
      {
        "SwitchCase": 1,
        "outerIIFEBody": 1
      }
    ],
    "@typescript-eslint/comma-dangle": "off",
    // sets the file naming style of the project
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ],
    "unicorn/no-null": "off",
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "replacements": {
          "q": {
            "query": true
          },
          "props": {
            "properties": false
          }
        }
      }
    ],
    "unicorn/no-array-reduce": "off",
    "unicorn/prefer-node-protocol": "off",
    "unicorn/prefer-module": "off",
    "unicorn/prefer-object-from-entries": "off",
    "jsdoc/require-example": [
      "warn",
      {
        "contexts": [
          "FunctionDeclaration",
          "FunctionExpression"
        ]
      }
    ],
    "require-jsdoc": [
      1,
      {
        "require": {
          "ArrowFunctionExpression": false,
          "ClassDeclaration": true,
          "FunctionDeclaration": true,
          "FunctionExpression": true,
          "MethodDefinition": true
        }
      }
    ],
    "unicorn/numeric-separators-style": "off",
    "no-continue": "off",
    "woke/all": 2,
    // this rule crashes
    "pii/no-dob": "off",
    // too many false positives
    "pii/no-phone-number": "off"
  }
}